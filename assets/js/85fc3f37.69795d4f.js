"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6086],{6962:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>g,frontMatter:()=>r,metadata:()=>s,toc:()=>p});var i=t(4848),o=t(8453);const r={},a="Google GenAI library",s={id:"integrations/genai",title:"Google GenAI library",description:"A lot of support for Google is provided including [vertexai]",source:"@site/docs/integrations/genai.md",sourceDirName:"integrations",slug:"/integrations/genai",permalink:"/docs/integrations/genai",draft:!1,unlisted:!1,editUrl:"https://github.com/sunholo-data/sunholo-py/tree/main/docs/docs/integrations/genai.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"cloudlogging",permalink:"/docs/integrations/cloudlogging"},next:{title:"Jan.ai",permalink:"/docs/integrations/jan"}},l={},p=[{value:"GenAI",id:"genai",level:2},{value:"GenAI v2",id:"genai-v2",level:2}];function c(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"google-genai-library",children:"Google GenAI library"})}),"\n",(0,i.jsx)(n.p,{children:"A lot of support for Google is provided including [vertexai]"}),"\n",(0,i.jsx)(n.h2,{id:"genai",children:"GenAI"}),"\n",(0,i.jsx)(n.p,{children:"TODO"}),"\n",(0,i.jsx)(n.h2,{id:"genai-v2",children:"GenAI v2"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.a,{href:"https://ai.google.dev/gemini-api/docs/models/gemini-v2",children:"https://ai.google.dev/gemini-api/docs/models/gemini-v2"})}),"\n",(0,i.jsx)(n.p,{children:"Latest version currently in preview for Gemini-Flash-2.0"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'from sunholo.genai.genaiv2 import GoogleAIConfig, GoogleAI\n# Initialize with Google AI API\nconfig = GoogleAIConfig(\n    api_key=os.getenv("GOOGLE_API_KEY"),\n)\nai = GoogleAI(config)\n\n# Basic text generation\nresponse = ai.generate_text(\n    "Write a short poem about AI",\n    temperature=0.8\n)\nprint(response)\n\n# Structured output example\nfrom pydantic import BaseModel\n\nclass MovieReview(BaseModel):\n    title: str\n    rating: float\n    tags: List[str]\n    summary: str\n    \nreview = ai.structured_output(\n    "Review the movie \'Inception\'",\n    MovieReview\n)\nprint(review)\n\n# Streaming example\nfor chunk in ai.stream_text("Tell me a story"):\n    print(chunk, end="")\n\nimport enum\nfrom typing_extensions import TypedDict\n\nclass Grade(enum.Enum):\n    A_PLUS = "a+"\n    A = "a"\n    B = "b"\n    C = "c"\n    D = "d"\n    F = "f"\n\nclass Recipe(TypedDict):\n    recipe_name: str\n    grade: Grade\n\nenum_review = ai.structured_output(\n    "List about 10 cookie recipes, grade them based on popularity",\n    Recipe, \n    is_list=True\n)\nprint(enum_review)\n\n# google search\ngoogle_tool = ai.google_search_tool()\nresponse = ai.generate_text(\n    "What is the news today in Denmark?",\n    tools=[google_tool],\n    temperature=0.8\n)\nprint(response)\n\n# define own functions\ndef get_current_weather(location: str,) -> int:\n    """Returns the current weather.\n\n    Args:\n        location: The city and state, e.g. San Francisco, CA\n    """\n    return \'sunny\'\n\nresponse = ai.generate_text(\n    "What is the weather today in Copenhagen?",\n    tools=[get_current_weather],\n    temperature=0.8\n)\nprint(response)\n\n# both not allowed\ntry:\n    response = ai.generate_text(\n        "What is the weather today in Copenhagen, and can you search for activities good for that weather?",\n        tools=[get_current_weather, google_tool],\n        temperature=0.8\n    )\n    print(response)\nexcept Exception as err:\n    print(err)\n\n# images\nan_image = ai.local_file("/Users/mark/dev/sunholo/sunholo-py/docs/static/img/eclipse1.png")\nresponse = ai.generate_text(\n    ["Describe this image", an_image],\n)\nprint(response)\n\n# upload file\n\n## download first example\nimport requests\nimport pathlib\ngs_uri = "https://storage.googleapis.com/sunholo-public-podcasts/emissary-person.png"\nfile_bytes = requests.get(gs_uri).content\nfile_path = pathlib.Path(\'person.png\')\nfile_path.write_bytes(file_bytes)\n\n# upload image to genai client\nfile_upload = ai.client.files.upload(path=file_path)\nan_image = ai.gs_uri(file_upload.uri)\nresponse = ai.generate_text(\n    ["Describe this image", an_image],\n)\nprint(response)\n'})})]})}function g(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>s});var i=t(6540);const o={},r=i.createContext(o);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);