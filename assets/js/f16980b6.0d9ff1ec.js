"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[2911],{9667:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>_,frontMatter:()=>c,metadata:()=>s,toc:()=>d});var t=i(4848),o=i(8453);const c={},l="gcp.py",s={id:"sunholo/utils/gcp",title:"gcp.py",description:"Source: sunholo/utils/gcp.py",source:"@site/docs/sunholo/utils/gcp.md",sourceDirName:"sunholo/utils",slug:"/sunholo/utils/gcp",permalink:"/docs/sunholo/utils/gcp",draft:!1,unlisted:!1,editUrl:"https://github.com/sunholo-data/sunholo-py/tree/main/docs/docs/sunholo/utils/gcp.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"config.py",permalink:"/docs/sunholo/utils/config"},next:{title:"parsers.py",permalink:"/docs/sunholo/utils/parsers"}},r={},d=[{value:"Functions",id:"functions",level:2},{value:"is_running_on_cloudrun()",id:"is_running_on_cloudrun",level:3},{value:"is_running_on_gcp()",id:"is_running_on_gcp",level:3},{value:"get_gcp_project()",id:"get_gcp_project",level:3},{value:"get_gcp_project()",id:"get_gcp_project-1",level:3},{value:"is_running_on_gcp()",id:"is_running_on_gcp-1",level:3},{value:"get_gcp_project()",id:"get_gcp_project-2",level:3},{value:"get_env_project_id()",id:"get_env_project_id",level:3},{value:"get_gcp_project()",id:"get_gcp_project-3",level:3},{value:"get_metadata(stem)",id:"get_metadatastem",level:3},{value:"get_region()",id:"get_region",level:3},{value:"get_service_account_email()",id:"get_service_account_email",level:3},{value:"is_gcp_logged_in()",id:"is_gcp_logged_in",level:3},{value:"is_running_on_cloudrun()",id:"is_running_on_cloudrun-1",level:3},{value:"is_running_on_gcp()",id:"is_running_on_gcp-2",level:3},{value:"Classes",id:"classes",level:2}];function a(e){const n={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",p:"p",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"gcppy",children:"gcp.py"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Source"}),": ",(0,t.jsx)(n.a,{href:"https://github.com/sunholo-data/sunholo-py/blob/main/sunholo/utils/gcp.py",children:"sunholo/utils/gcp.py"})]}),"\n",(0,t.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,t.jsx)(n.h3,{id:"is_running_on_cloudrun",children:"is_running_on_cloudrun()"}),"\n",(0,t.jsx)(n.p,{children:"No docstring available."}),"\n",(0,t.jsx)(n.h3,{id:"is_running_on_gcp",children:"is_running_on_gcp()"}),"\n",(0,t.jsx)(n.p,{children:"No docstring available."}),"\n",(0,t.jsx)(n.h3,{id:"get_gcp_project",children:"get_gcp_project()"}),"\n",(0,t.jsx)(n.p,{children:"No docstring available."}),"\n",(0,t.jsx)(n.h3,{id:"get_gcp_project-1",children:"get_gcp_project()"}),"\n",(0,t.jsx)(n.p,{children:"No docstring available."}),"\n",(0,t.jsx)(n.h3,{id:"is_running_on_gcp-1",children:"is_running_on_gcp()"}),"\n",(0,t.jsx)(n.p,{children:"No docstring available."}),"\n",(0,t.jsx)(n.h3,{id:"get_gcp_project-2",children:"get_gcp_project()"}),"\n",(0,t.jsx)(n.p,{children:"No docstring available."}),"\n",(0,t.jsx)(n.h3,{id:"get_env_project_id",children:"get_env_project_id()"}),"\n",(0,t.jsx)(n.p,{children:"Attempts to retrieve the project ID from environment variables."}),"\n",(0,t.jsx)(n.p,{children:"Returns:\nstr or None: The project ID if found in environment variables, None otherwise."}),"\n",(0,t.jsx)(n.h3,{id:"get_gcp_project-3",children:"get_gcp_project()"}),"\n",(0,t.jsx)(n.p,{children:"No docstring available."}),"\n",(0,t.jsx)(n.h3,{id:"get_metadatastem",children:"get_metadata(stem)"}),"\n",(0,t.jsx)(n.p,{children:"No docstring available."}),"\n",(0,t.jsx)(n.h3,{id:"get_region",children:"get_region()"}),"\n",(0,t.jsx)(n.p,{children:"No docstring available."}),"\n",(0,t.jsx)(n.h3,{id:"get_service_account_email",children:"get_service_account_email()"}),"\n",(0,t.jsx)(n.p,{children:"No docstring available."}),"\n",(0,t.jsx)(n.h3,{id:"is_gcp_logged_in",children:"is_gcp_logged_in()"}),"\n",(0,t.jsx)(n.p,{children:"Check if the current environment has valid Google Cloud Platform (GCP) credentials."}),"\n",(0,t.jsxs)(n.p,{children:["This function attempts to obtain the default application credentials from the environment.\nIt will return ",(0,t.jsx)(n.code,{children:"True"})," if credentials are available, otherwise it returns ",(0,t.jsx)(n.code,{children:"False"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Returns:\nbool: ",(0,t.jsx)(n.code,{children:"True"})," if GCP credentials are available, ",(0,t.jsx)(n.code,{children:"False"})," otherwise."]}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsx)(n.p,{children:'if is_gcp_logged_in():\n...     print("GCP credentials found.")\n... else:\n...     print("GCP credentials not found or invalid.")'}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"is_running_on_cloudrun-1",children:"is_running_on_cloudrun()"}),"\n",(0,t.jsx)(n.p,{children:"No docstring available."}),"\n",(0,t.jsx)(n.h3,{id:"is_running_on_gcp-2",children:"is_running_on_gcp()"}),"\n",(0,t.jsx)(n.p,{children:"No docstring available."}),"\n",(0,t.jsx)(n.h2,{id:"classes",children:"Classes"})]})}function _(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>l,x:()=>s});var t=i(6540);const o={},c=t.createContext(o);function l(e){const n=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),t.createElement(c.Provider,{value:n},e.children)}}}]);