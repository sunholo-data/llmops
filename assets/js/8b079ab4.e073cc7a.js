"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9982],{7754:(n,e,a)=>{a.r(e),a.d(e,{assets:()=>c,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>g});var s=a(4848),t=a(8453);const o={},i="swagger.py",r={id:"sunholo/agents/swagger",title:"swagger.py",description:"Source: sunholo/agents/swagger.py",source:"@site/docs/sunholo/agents/swagger.md",sourceDirName:"sunholo/agents",slug:"/sunholo/agents/swagger",permalink:"/docs/sunholo/agents/swagger",draft:!1,unlisted:!1,editUrl:"https://github.com/sunholo-data/sunholo-py/tree/main/docs/docs/sunholo/agents/swagger.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"special_commands.py",permalink:"/docs/sunholo/agents/special_commands"},next:{title:"archive.py",permalink:"/docs/sunholo/archive/"}},c={},g=[{value:"Functions",id:"functions",level:2},{value:"config_to_swagger()",id:"config_to_swagger",level:3},{value:"generate_swagger(vac_config)",id:"generate_swaggervac_config",level:3}];function l(n){const e={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,t.R)(),...n.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(e.h1,{id:"swaggerpy",children:"swagger.py"}),"\n",(0,s.jsxs)(e.p,{children:[(0,s.jsx)(e.em,{children:"Source"}),": ",(0,s.jsx)(e.a,{href:"https://github.com/sunholo-data/sunholo-py/blob/main/sunholo/agents/swagger.py",children:"sunholo/agents/swagger.py"})]}),"\n",(0,s.jsx)(e.h2,{id:"functions",children:"Functions"}),"\n",(0,s.jsx)(e.h3,{id:"config_to_swagger",children:"config_to_swagger()"}),"\n",(0,s.jsx)(e.p,{children:"Load configuration files and generate a Swagger specification."}),"\n",(0,s.jsx)(e.p,{children:"This function loads the 'vacConfig' and 'agentConfig' configuration files,\nvalidates their presence, and then generates a Swagger specification\nbased on these configurations."}),"\n",(0,s.jsx)(e.p,{children:"Returns:\nstr: The generated Swagger specification in YAML format."}),"\n",(0,s.jsx)(e.p,{children:"Raises:\nValueError: If 'vacConfig' or 'agentConfig' is not loaded."}),"\n",(0,s.jsx)(e.p,{children:"Example:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"    swagger_yaml = config_to_swagger()\n    print(swagger_yaml)\n"})}),"\n",(0,s.jsx)(e.h3,{id:"generate_swaggervac_config",children:"generate_swagger(vac_config)"}),"\n",(0,s.jsx)(e.p,{children:"Generate a Swagger specification based on the provided configurations."}),"\n",(0,s.jsx)(e.p,{children:"This function creates a Swagger specification using the provided 'vacConfig'\nand 'agentConfig'. It dynamically builds paths and responses based on the\nconfigurations."}),"\n",(0,s.jsx)(e.p,{children:"Args:\nvac_config (dict): The VAC configuration.\nagent_config (dict): The agent configuration."}),"\n",(0,s.jsx)(e.p,{children:"Returns:\nstr: The generated Swagger specification in YAML format."}),"\n",(0,s.jsx)(e.p,{children:"Example:"}),"\n",(0,s.jsx)(e.pre,{children:(0,s.jsx)(e.code,{className:"language-python",children:"    vac_config = {\n        'vac': {\n            'service1': {\n                'llm': 'vertex',\n                'model': 'gemini-1.5-flash-001',\n                'agent': 'langserve'\n            },\n            'service2': {\n                'llm': 'openai',\n                'agent': 'crewai',\n                'secrets': ['OPENAI_API_KEY']\n            }\n        }\n    }\n    \n    agent_config = {\n        'agents': {\n            'default': {\n                'stream': \"{stem}/vac/streaming/{vector_name}\",\n                'invoke': \"{stem}/vac/{vector_name}\",\n                'post': {\n                    'stream': \"{stem}/vac/streaming/{vector_name}\",\n                    'invoke': \"{stem}/vac/{vector_name}\",\n                    'openai': \"{stem}/openai/v1/chat/completions\",\n                    'openai-vac': \"{stem}/openai/v1/chat/completions/{vector_name}\"\n                },\n                'get': {\n                    'home': \"{stem}/\",\n                    'health': \"{stem}/health\"\n                },\n                'response': {\n                    'invoke': {\n                        '200': {\n                            'description': 'Successful invocation response',\n                            'schema': {\n                                'type': 'object',\n                                'properties': {\n                                    'answer': {'type': 'string'},\n                                    'source_documents': {\n                                        'type': 'array',\n                                        'items': {\n                                            'type': 'object',\n                                            'properties': {\n                                                'page_content': {'type': 'string'},\n                                                'metadata': {'type': 'string'}\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    \n    swagger_yaml = generate_swagger(vac_config, agent_config)\n    print(swagger_yaml)\n"})})]})}function d(n={}){const{wrapper:e}={...(0,t.R)(),...n.components};return e?(0,s.jsx)(e,{...n,children:(0,s.jsx)(l,{...n})}):l(n)}},8453:(n,e,a)=>{a.d(e,{R:()=>i,x:()=>r});var s=a(6540);const t={},o=s.createContext(t);function i(n){const e=s.useContext(o);return s.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(t):n.components||t:i(n.components),s.createElement(o.Provider,{value:e},n.children)}}}]);