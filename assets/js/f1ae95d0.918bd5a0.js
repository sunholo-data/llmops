"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7776],{9415:(n,e,s)=>{s.r(e),s.d(e,{assets:()=>r,contentTitle:()=>c,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>o});var l=s(4848),a=s(8453);const t={},c="async_class.py",i={id:"sunholo/invoke/async_class",title:"async_class.py",description:"Source: sunholo/invoke/asyncclass.py",source:"@site/docs/sunholo/invoke/async_class.md",sourceDirName:"sunholo/invoke",slug:"/sunholo/invoke/async_class",permalink:"/docs/sunholo/invoke/async_class",draft:!1,unlisted:!1,editUrl:"https://github.com/sunholo-data/sunholo-py/tree/main/docs/docs/sunholo/invoke/async_class.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"safety.py",permalink:"/docs/sunholo/genai/safety"},next:{title:"direct_vac_func.py",permalink:"/docs/sunholo/invoke/direct_vac_func"}},r={},o=[{value:"Classes",id:"classes",level:2},{value:"AsyncTaskRunner",id:"asynctaskrunner",level:3}];function d(n){const e={a:"a",em:"em",h1:"h1",h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,a.R)(),...n.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.h1,{id:"async_classpy",children:"async_class.py"}),"\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.em,{children:"Source"}),": ",(0,l.jsx)(e.a,{href:"https://github.com/sunholo-data/sunholo-py/blob/main/sunholo/invoke/async_class.py",children:"sunholo/invoke/async_class.py"})]}),"\n",(0,l.jsx)(e.h2,{id:"classes",children:"Classes"}),"\n",(0,l.jsx)(e.h3,{id:"asynctaskrunner",children:"AsyncTaskRunner"}),"\n",(0,l.jsx)(e.p,{children:"No docstring available."}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsxs)(e.p,{children:[(0,l.jsx)(e.strong,{children:"init"}),"(self, retry_enabled=False, retry_kwargs=None)"]}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Initialize self.  See help(type(self)) for accurate signature."}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsx)(e.p,{children:"_send_heartbeat(self, callback, func_name, interval=2)"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Sends a periodic heartbeat to keep the task alive and update the spinner with elapsed time."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:"Args:\ncallback: The callback to notify that the task is still working.\nfunc_name: The name of the task function.\ninterval: How frequently to send heartbeat messages (in seconds)."}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsx)(e.p,{children:"_task_wrapper(self, name: str, func: Callable[..., Any], args: Any, callback=None) -> Any"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Wraps the task function to process its output and handle retries, while managing heartbeat updates."}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsx)(e.p,{children:"add_task(self, func: Callable[..., Any], *args: Any)"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Adds a task to the list of tasks to be executed."}),"\n"]}),"\n"]}),"\n",(0,l.jsxs)(e.li,{children:["\n",(0,l.jsx)(e.p,{children:"run_async_as_completed(self, callback=None) -> AsyncGenerator[Dict[str, Any], NoneType]"}),"\n",(0,l.jsxs)(e.ul,{children:["\n",(0,l.jsx)(e.li,{children:"Runs all tasks concurrently and yields results as they complete, while periodically sending heartbeat messages."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,l.jsx)(e.p,{children:"Args:\ncallback: The callback object that will receive heartbeat messages."})]})}function h(n={}){const{wrapper:e}={...(0,a.R)(),...n.components};return e?(0,l.jsx)(e,{...n,children:(0,l.jsx)(d,{...n})}):d(n)}},8453:(n,e,s)=>{s.d(e,{R:()=>c,x:()=>i});var l=s(6540);const a={},t=l.createContext(a);function c(n){const e=l.useContext(t);return l.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function i(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:c(n.components),l.createElement(t.Provider,{value:e},n.children)}}}]);