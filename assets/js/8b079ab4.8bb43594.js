"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9982],{7754:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>g});var t=a(4848),s=a(8453);const o={},i="swagger.py",r={id:"sunholo/agents/swagger",title:"swagger.py",description:"Source: sunholo/agents/swagger.py",source:"@site/docs/sunholo/agents/swagger.md",sourceDirName:"sunholo/agents",slug:"/sunholo/agents/swagger",permalink:"/docs/sunholo/agents/swagger",draft:!1,unlisted:!1,editUrl:"https://github.com/sunholo-data/sunholo-py/tree/main/docs/docs/sunholo/agents/swagger.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"special_commands.py",permalink:"/docs/sunholo/agents/special_commands"},next:{title:"archive.py",permalink:"/docs/sunholo/archive/"}},c={},g=[{value:"Functions",id:"functions",level:2},{value:"config_to_swagger()",id:"config_to_swagger",level:3},{value:"validate_api_key(api_key: str, service_name: str) -&gt; bool",id:"validate_api_keyapi_key-str-service_name-str---bool",level:3},{value:"generate_swagger(vac_config, agent_config)",id:"generate_swaggervac_config-agent_config",level:3}];function l(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"swaggerpy",children:"swagger.py"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.em,{children:"Source"}),": ",(0,t.jsx)(n.a,{href:"https://github.com/sunholo-data/sunholo-py/blob/main/sunholo/agents/swagger.py",children:"sunholo/agents/swagger.py"})]}),"\n",(0,t.jsx)(n.h2,{id:"functions",children:"Functions"}),"\n",(0,t.jsx)(n.h3,{id:"config_to_swagger",children:"config_to_swagger()"}),"\n",(0,t.jsx)(n.p,{children:"Load configuration files and generate a Swagger specification."}),"\n",(0,t.jsx)(n.p,{children:"This function loads the 'vacConfig' and 'agentConfig' configuration files,\nvalidates their presence, and then generates a Swagger specification\nbased on these configurations."}),"\n",(0,t.jsx)(n.p,{children:"Returns:\nstr: The generated Swagger specification in YAML format."}),"\n",(0,t.jsx)(n.p,{children:"Raises:\nValueError: If 'vacConfig' or 'agentConfig' is not loaded."}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"    swagger_yaml = config_to_swagger()\n    print(swagger_yaml)\n"})}),"\n",(0,t.jsx)(n.h3,{id:"validate_api_keyapi_key-str-service_name-str---bool",children:"validate_api_key(api_key: str, service_name: str) -> bool"}),"\n",(0,t.jsx)(n.p,{children:"Validate an API key against the service name e.g. 'endpoints-xxxx.a.run.app'"}),"\n",(0,t.jsx)(n.h3,{id:"generate_swaggervac_config-agent_config",children:"generate_swagger(vac_config, agent_config)"}),"\n",(0,t.jsx)(n.p,{children:"Generate a Swagger specification based on the provided configurations."}),"\n",(0,t.jsx)(n.p,{children:"This function creates a Swagger specification using the provided 'vacConfig'\nand 'agentConfig'. It dynamically builds paths and responses based on the\nconfigurations."}),"\n",(0,t.jsx)(n.p,{children:"Args:\nvac_config (dict): The VAC configuration.\nagent_config (dict): The agent configuration."}),"\n",(0,t.jsx)(n.p,{children:"Returns:\nstr: The generated Swagger specification in YAML format."}),"\n",(0,t.jsx)(n.p,{children:"Example:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-python",children:"    vac_config = {\n        'vac': {\n            'service1': {\n                'llm': 'vertex',\n                'model': 'gemini-1.5-flash-001',\n                'agent': 'langserve'\n            },\n            'service2': {\n                'llm': 'openai',\n                'agent': 'crewai',\n                'secrets': ['OPENAI_API_KEY']\n            }\n        }\n    }\n    \n    agent_config = {\n        'agents': {\n            'default': {\n                'stream': \"{stem}/vac/streaming/{vector_name}\",\n                'invoke': \"{stem}/vac/{vector_name}\",\n                'post': {\n                    'stream': \"{stem}/vac/streaming/{vector_name}\",\n                    'invoke': \"{stem}/vac/{vector_name}\",\n                    'openai': \"{stem}/openai/v1/chat/completions\",\n                    'openai-vac': \"{stem}/openai/v1/chat/completions/{vector_name}\"\n                },\n                'get': {\n                    'home': \"{stem}/\",\n                    'health': \"{stem}/health\"\n                },\n                'response': {\n                    'invoke': {\n                        '200': {\n                            'description': 'Successful invocation response',\n                            'schema': {\n                                'type': 'object',\n                                'properties': {\n                                    'answer': {'type': 'string'},\n                                    'source_documents': {\n                                        'type': 'array',\n                                        'items': {\n                                            'type': 'object',\n                                            'properties': {\n                                                'page_content': {'type': 'string'},\n                                                'metadata': {'type': 'string'}\n                                            }\n                                        }\n                                    }\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    \n    swagger_yaml = generate_swagger(vac_config, agent_config)\n    print(swagger_yaml)\n"})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>r});var t=a(6540);const s={},o=t.createContext(s);function i(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(o.Provider,{value:n},e.children)}}}]);