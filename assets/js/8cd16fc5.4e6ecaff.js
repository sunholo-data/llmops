"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[3117],{8964:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>r,contentTitle:()=>a,default:()=>h,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var t=o(4848),i=o(8453);const s={},a="Sunholo CLI",l={id:"howto/cli",title:"Sunholo CLI",description:"A CLI is installed via sunholo[cli]",source:"@site/docs/howto/cli.md",sourceDirName:"howto",slug:"/howto/cli",permalink:"/docs/howto/cli",draft:!1,unlisted:!1,editUrl:"https://github.com/sunholo-data/sunholo-py/tree/main/docs/docs/howto/cli.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"PostgreSQL databases",permalink:"/docs/databases/postgres"},next:{title:"Creating a Flask VAC app",permalink:"/docs/howto/flask_app"}},r={},c=[{value:"Config",id:"config",level:2},{value:"Merge Text",id:"merge-text",level:2}];function d(n){const e={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h1,{id:"sunholo-cli",children:"Sunholo CLI"}),"\n",(0,t.jsxs)(e.p,{children:["A CLI is installed via ",(0,t.jsx)(e.code,{children:"sunholo[cli]"})]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"pip install sunholo[cli]\n\nsunholo --help\nusage: sunholo [-h] {deploy,list-configs,init,merge-text} ...\n\nsunholo CLI tool for deploying GenAI VACs\n\noptional arguments:\n  -h, --help            show this help message and exit\n\ncommands:\n  Valid commands\n\n  {deploy,list-configs,init,merge-text}\n                        Commands\n    deploy              Triggers a deployment of a VAC.\n    list-configs        Lists all configuration files and their details\n    init                Initializes a new sunholo project.\n    merge-text          Merge text files from a source folder into a single output file.\n"})}),"\n",(0,t.jsx)(e.h2,{id:"config",children:"Config"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sunholo list-configs -h\nusage: sunholo list-configs [-h] [--kind KIND] [--vac VAC] [--validate]\n\noptional arguments:\n  -h, --help   show this help message and exit\n  --kind KIND  Filter configurations by kind e.g. `--kind=vacConfig`\n  --vac VAC    Filter configurations by VAC name e.g. `--vac=edmonbrain`\n  --validate   Validate the configuration files.\n"})}),"\n",(0,t.jsx)(e.p,{children:"Examples:"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sunholo list-configs\n#'## Config kind: promptConfig'\n#{'apiVersion': 'v1',\n# 'kind': 'promptConfig',\n# 'prompts': {'eduvac': {'chat_summary': 'Summarise the conversation below:\\n'\n#                                        '# Chat History\\n'\n#                                        '{chat_history}\\n'\n#                                        '# End Chat History\\n'\n#                                        'If in the chat history is a lesson '\n# ...                \n\nsunholo list-configs --kind 'vacConfig'\n## Config kind: vacConfig\n#{'apiVersion': 'v1',\n# 'kind': 'vacConfig',\n# 'vac': {'codey': {'agent': 'edmonbrain_rag',\n# ...\n\nsunholo list-configs --kind=vacConfig --vac=edmonbrain           \n## Config kind: vacConfig\n#{'edmonbrain': {'agent': 'edmonbrain',\n#                'avatar_url': 'https://avatars.githubusercontent.com/u/3155884?s=48&v=4',\n#                'description': 'This is the original '\n#                               '[Edmonbrain](https://code.markedmondson.me/running-llms-on-gcp/) '\n#                               'implementation that uses RAG to answer '\n#                               'questions based on data you send in via its '\n# ...\n\n# add the --validate flag to check the configuration against a schema\nsunholo list-configs --kind=vacConfig --vac=edmonbrain --validate           \n## Config kind: vacConfig\n#{'edmonbrain': {'agent': 'edmonbrain',\n#                'avatar_url': 'https://avatars.githubusercontent.com/u/3155884?s=48&v=4',\n#                'description': 'This is the original '\n#                               '[Edmonbrain](https://code.markedmondson.me/running-llms-on-gcp/) '\n#                               'implementation that uses RAG to answer '\n#                               'questions based on data you send in via its '\n# ...\n#Validating configuration for kind: vacConfig\n#Validating vacConfig for edmonbrain\n#OK: Validated schema\n"})}),"\n",(0,t.jsxs)(e.p,{children:["You can use the ",(0,t.jsx)(e.code,{children:"--validate"})," flag in CI/CD to check the configuration each commit, for example in Cloud Build:"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-yaml",children:"...\n  - name: 'python:3.9'\n    id: validate config\n    entrypoint: 'bash'\n    waitFor: [\"-\"]\n    args:\n    - '-c'\n    - |\n      pip install --no-cache sunholo\n      sunholo list-configs --validate || exit 1\n      sunholo list-configs --kind=vacConfig --vac=${_SERVICE_NAME} --validate || exit 1\n"})}),"\n",(0,t.jsx)(e.h2,{id:"merge-text",children:"Merge Text"}),"\n",(0,t.jsx)(e.p,{children:"Useful to turn a folder into one text file for large context windows."}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{className:"language-bash",children:"sunholo merge-text -h \nusage: sunholo merge-text [-h] [--gitignore GITIGNORE] [--output_tree] source_folder output_file\n\npositional arguments:\n  source_folder         Folder containing the text files.\n  output_file           Output file to write the merged text.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --gitignore GITIGNORE\n                        Path to .gitignore file to exclude patterns.\n  --output_tree         Set to output the file tree in the console after merging\n"})})]})}function h(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(d,{...n})}):d(n)}},8453:(n,e,o)=>{o.d(e,{R:()=>a,x:()=>l});var t=o(6540);const i={},s=t.createContext(i);function a(n){const e=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function l(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:a(n.components),t.createElement(s.Provider,{value:e},n.children)}}}]);