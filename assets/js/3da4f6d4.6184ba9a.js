"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7597],{1645:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var o=s(4848),t=s(8453);const i={},a="extensions_class.py",l={id:"sunholo/vertex/extensions_class",title:"extensions_class.py",description:"Source: sunholo/vertex/extensionsclass.py",source:"@site/docs/sunholo/vertex/extensions_class.md",sourceDirName:"sunholo/vertex",slug:"/sunholo/vertex/extensions_class",permalink:"/docs/sunholo/vertex/extensions_class",draft:!1,unlisted:!1,editUrl:"https://github.com/sunholo-data/sunholo-py/tree/main/docs/docs/sunholo/vertex/extensions_class.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"version.py",permalink:"/docs/sunholo/utils/version"},next:{title:"init.py",permalink:"/docs/sunholo/vertex/init"}},r={},c=[{value:"Classes",id:"classes",level:2},{value:"VertexAIExtensions",id:"vertexaiextensions",level:3}];function p(e){const n={a:"a",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.h1,{id:"extensions_classpy",children:"extensions_class.py"}),"\n",(0,o.jsxs)(n.p,{children:[(0,o.jsx)(n.em,{children:"Source"}),": ",(0,o.jsx)(n.a,{href:"https://github.com/sunholo-data/sunholo-py/blob/main/sunholo/vertex/extensions_class.py",children:"sunholo/vertex/extensions_class.py"})]}),"\n",(0,o.jsx)(n.h2,{id:"classes",children:"Classes"}),"\n",(0,o.jsx)(n.h3,{id:"vertexaiextensions",children:"VertexAIExtensions"}),"\n",(0,o.jsx)(n.p,{children:"Example"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-python",children:"from sunholo.vertex import VertexAIExtensions\nvex = VertexAIExtensions()\nvex.list_extensions()\n# [{'resource_name': 'projects/374404277595/locations/us-central1/extensions/770924776838397952', 'display_name': 'Code Interpreter', 'description': 'N/A'}]\n\n# creating an extension\n\n## validates before upload\nvex.upload_openapi_file(\"your-extension-name.yaml\")\nvex.openapi_file_gcs\n# 'gs://your-extensions-bucket/your-extension-name.yaml'\n\n## load in examples to be used by creation later\nvex.load_tool_use_examples('your-examples.yaml')\n>>> \n\n\n* __init__(self)\n- Initialize self.  See help(type(self)) for accurate signature.\n\n* create_extension(self, display_name: str, description: str, open_api_gcs_uri: str = None, tool_example_file: str = None, runtime_config: dict = None, service_account: str = None)\n- No docstring available.\n\n* create_extension_manifest(self, display_name, description, open_api_gcs_uri: str, service_account: str)\n- No docstring available.\n\n* execute_code_extension(self, query: str, filenames: list[str] = None, gcs_files: list[str] = None, bucket_name: str = None)\n- No docstring available.\n\n* execute_extension(self, operation_id: str, operation_params: dict, extension_id: str)\n- No docstring available.\n\n* list_extensions(self)\n- No docstring available.\n\n* load_tool_use_examples(self, filename: str)\n- No docstring available.\n\n* parse_files_to_html(self, outputFiles, save_files_locally=True)\n- No docstring available.\n\n* process_response(self, response: dict, save_file_name=None) -> str\n- No docstring available.\n\n* update_tool_use_examples_via_patch(self)\n- No docstring available.\n\n* upload_openapi_file(self, filename: str)\n- No docstring available.\n\n* upload_to_gcs(self, filename)\n- No docstring available.\n\n* validate_openapi(self, filename)\n- No docstring available.\n\n"})})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>l});var o=s(6540);const t={},i=o.createContext(t);function a(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);